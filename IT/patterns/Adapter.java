/**
 * https://refactoring.guru/ru/design-patterns/adapter/java/example
 *
 *  Cтруктурный паттерн проектирования, который позволяет объектам с
 *  несовместимыми интерфейсами работать вместе.
 *
 *  Адаптер это объект, который трансформирует интерфейс или данные
 *  одного объекта в такой вид, чтобы он стал понятен другому объекту.
 *
 *  Адаптеры могут не только переводить данные из одного формата в другой,
 *  но и помогать объектам с разными интерфейсами работать сообща.
 *
 *  Это работает так:
 *
 * 1. Адаптер имеет интерфейс, который совместим с одним из объектов.
 * 2. Поэтому этот объект может свободно вызывать методы адаптера.
 * 3. Адаптер получает эти вызовы и перенаправляет их второму объекту, но уже в
 *    том формате и последовательности, которые понятны второму объекту.
 *
 * Когда вы хотите использовать сторонний класс, но его интерфейс
 * не соответствует остальному коду приложения.
 */