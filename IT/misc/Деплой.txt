Деплой war артефакта напрямую в tomcat на удаленном сервере
Гайд подойдет для linux ubuntu 
Для других дистрибутивов смотрите команды в интернете, алгоритм идентичный

1. Аренда. Выбираете сервис, на котором будете себе арендовывать виртуальную машину (ВМ). Нужно понимать, что для доступа другим людям к вашим проектам, работающим на вашей ВМ должен быть публичный ip. 

Не забудьте настроить это при конфигурации ВМ. Для проектов можно брать минимальную конфигурацию (1 ядро и 1 гб RAM). Подключение будет по ssh ключу. В настройке ВМ выбираете себе операционную систему, на которой она будет работать -  centOS или ubuntu мой выбор, вы можете выбрать что угодно (fedora, arch, astra), чем новее, тем лучше. 

2. SSH ключ. У себя на ПК генерируете ssh ключи, один приватный, другой публичный (вы можете использовать уже готовую пару ключей, если она у вас уже есть, тогда пропустите пункт генерации и приступите сразу к загрузке). Публичный ключ вы загружаете при создании ВМ - сервис вас попросит это сделать.  Следующая команда автоматически генерирует публичный и приватный ключ:

	ssh-keygen

Можете выбрать вводить фразу или нет, можно просто прожать enter. В директории (погуглите, зависит от системы) будет находится 2 ключа, пример названий:

	id_rsa — приватный ключ
	id_rsa.pub — публичный ключ

Папка может быть по дефолту скрытой, найдите сочетание клавиш для отображения скрытых папок. 

3. ВМ. Отлично, вы создали виртуальную машину, загрузили туда ssh ключ и готовы подключаться.

	ssh user@188.50.92.41

Вместо user напишите имя вашего пользователя ВМ, которое вы настроили. Зависит от сервиса, могут попросить вместо user прописать root, далее следует публичный ip вашей ВМ. Появится предложение подключиться, строго пропишите "yes" если хотите подключиться, и далее нажимайте enter. 

Если вы не впишите yes - подключение будет завершено как неудачное.  ВМ может потребовать пароль, если вы сразу подключаетесь как root. Пароль доступен на сервисе, в конфигурации ВМ которую вы настраивали. Пароль не задается пользователем, он автоматически сгенерированный, (не путайте с паролем для подключения вместо ssh ключа) просто скопируйте и вставьте его.

Если все пункты выполнены верно - вы должны сейчас иметь полный доступ к ВМ и быть под ее терминалом. Если у вас уже root - писать sudo перед каждой командой не обязательно. 

3. База. ВМ - это чистый линукс, лучше перед использованием его обновить. 

	sudo apt update

	sudo apt upgrade -y

Основной и главный принцип - если у вас программа работает на определенной Java и Tomcat - значит и в любом другом месте на тех же версиях  Java и Tomcat она будет работать. 

4. Если вы используете брандмауэр - необходимо открыть порт 8080. (обычно это функция отключена при настройке ВМ, но вы можете ее активировать)

	sudo iptables -A INPUT -p tcp --dport 8080 -j ACCEPT 

5. Java. Узнайте, какая версия установлена и у вас, чтобы установить такую же версию на ВМ:

	sudo apt install openjdk-11-jdk

Вместо числа (в данном случае 11) впишите вашу версию, например 17. Проверьте, какая версия установлена:

	java -version

6. Tomcat. Создайте нового пользователя:

	sudo useradd tomcat -U -s /bin/false -d /opt/tomcat -m

В итоге будет создан пользователь tomcat со следующими опциями:

-U — также будет создана группа с таким же именем, что и пользователь.
-s /bin/false — запрещает пользователю интерактивный вход в систему.
-d /opt/tomcat — указывает путь до домашней директории пользователя.
-m — сразу создает домашнюю директорию пользователю.
Можно приступать к установке веб-сервера Apache Tomcat.

Узнайте, какая версия tomcat вам необходима, зайдите на сайт, раздел download и выберите нужную вам, например для 10 версии:
https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.20/bin/apache-tomcat-10.1.20.tar.gz

Далее с помощью wget скачиваете tomcat:

	sudo wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.20/bin/apache-tomcat-10.1.20.tar.gz

Распаковываем содержимое архива в каталог /opt/tomcat:

	sudo tar zxvf apache-tomcat-*.tar.gz -C /opt/tomcat --strip-components 1
 Готово. Можно запустить сервер командой:
 	sudo /opt/tomcat/bin/startup.sh  Теперь по адресу вашего внешнего публичного ip + порт 8080 вы должны увидеть меню tomcat. 89.223.121.49:8080 - как пример 
Если у вас ничего нет по этому адресу, но вы уверены, что все сделали верно и сервер tomcat запустится - нужно проверить внутренний ip.  Может быть такое, что существует несколько интерфейсов и адрес внутреннего ip не соответствует внешнему, можете написать в поддержку, вам должны помочь.   	sudo ip a  1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether be:3e:c1:50:bf:5e brd ff:ff:ff:ff:ff:ff
    inet 89.223.121.49/24 brd 89.223.121.255 scope global dynamic eth0
       valid_lft 58794sec preferred_lft 58794sec
    inet6 2a03:6f00:5:1::3f62/64 scope global 
       valid_lft forever preferred_lft forever
    inet6 fe80::bc3e:c1ff:fe50:bf5e/64 scope link 
       valid_lft forever preferred_lft forever
 Что-то такое вы должны увидеть. Наверху адрес localhost, а внизу в пункте 2 (пунктов может быть больше) после inet должен быть ПУБЛИЧНЫЙ адрес  ВМ, а не внутренний. 
Если все равно нет доступа - проверьте какой порт слушает tomcat, обычно это всегда 8080. 

7. Автозапуск. Чтобы после перезагрузки ВМ (такое может случится) tomcat снова запустился, создадим юнит в systemd. 

	sudo /opt/tomcat/bin/shutdown.sh

	sudo chown -R tomcat:tomcat /opt/tomcat

	sudo vi /etc/systemd/system/tomcat.service (можно использовать nano)
 Если у вас идет настройка на только что созданной ВМ - просто вставьте этот текст и сохраните файл. 
Чтобы редактировать файл - нажмите на клавиатуре английскую букву i. После окончания редактирования - нажмите ecs. 
Чтобы сохранить и выйти из vim - поочередно нажимаем :wq и далее enter. Если вам не хочется сохранять -  :q! и далее enter.

	[Unit]
	Description=Apache Tomcat Server
	After=network.target

	[Service]
	Type=forking
	User=tomcat
	Group=tomcat
	Environment="JAVA_HOME=/usr/lib/jvm/default-java"
	Environment="JAVA_OPTS=-Djava.security.egd=file:///dev/urandom -Djava.awt.headless=true"
	Environment="CATALINA_BASE=/opt/tomcat"
	Environment="CATALINA_HOME=/opt/tomcat"
	Environment="CATALINA_PID=/opt/tomcat/temp/tomcat.pid"
	Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
	ExecStart=/opt/tomcat/bin/startup.sh
	ExecStop=/opt/tomcat/bin/shutdown.sh
	Restart=on-failure
	RestartSec=10

	[Install]
	WantedBy=multi-user.target

Перечитываем новый конфигурационный файл в systemd:

	sudo systemctl daemon-reload

Стартуем наш сервис:

	sudo systemctl start tomcat

Проверяем, что он запустился и работает:

	sudo systemctl status tomcat

Мы должны увидеть что-то на подобие:

  tomcat.service - Apache Tomcat Server
     Loaded: loaded (/etc/systemd/system/tomcat.service; disabled; vendor preset: enabled)
     Active: active (running) since Tue 2021-02-09 10:30:25 UTC; 22h ago
   Main PID: 14645 (java)

При необходимости перезапуска сервиса, можно будет использовать команду:

	sudo systemctl restart tomcat
 8. Пользователь. Создадим служебного пользователя, чтобы сразу с домашнего ПК загрузить war артефакт в tomcat.    	sudo vi /opt/tomcat/conf/tomcat-users.xml   Добавляем внутрь этот код (практические в самый конец): 
   <role rolename="admin-gui"/>    <role rolename="manager-gui"/>    <user username="admin" password="password" roles="admin-gui,manager-gui"/> </tomcat-users> 
Перезапускаем tomcat:

	sudo systemctl restart tomcat

Разделы позволяют получить доступ к статистике и управлению веб-приложениями. Они настраиваются вместе. Открываем файл:

	sudo vi /opt/tomcat/webapps/manager/META-INF/context.xml

Находим строку:

         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />

Добавляем IP-адрес компьютера, с которого будем подключаться, например:

         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1|192.168.1.15" />

В данном примере мы добавили адрес 192.168.1.15, которому разрешаем подключаться к статистике сервера и управлению веб-приложениями.

Переходим на наш томкат в браузере - в manager. Там будет возможность загрузить war артефакт прямо с вашего пк или указать путь до архива на ВМ. Загружаете свой war артефакт, который вы собрали в ide и нажимаете кнопку deploy. По дефолту он будет лежать в /opt/tomcat/webapps. Архив автоматически разархивируется, если загружаете вручную - установите unzip и разархивируйте его в папку webapps. 

Теперь по пути <ваш публичный ip>/<название папки проекта (если вы загружали war - будет название файла war>/ - лежит ваше приложение Пример - http://89.223.121.49:8080/currency-api/{любой из реализованных эндпоинтов}
 